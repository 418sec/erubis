###
### $Rev$
### $Release$
### $Copyright$
###

project    = 'erubis'

copyright  = "copyright(c) 2006 kuwata-lab all rights reserved."

text_files = %w[ChangeLog README COPYING setup.rb erubis.gemspec]

doc_files  = %w[doc/users-guide.html doc/docstyle.css]

inline_require_script = "#{ENV['HOME']}/src/inline-require/trunk/bin/inline-require"

recipe  :all		, text_files, doc_files


recipe  :clear							do |r|
	files = []
	files.concat Dir.glob("#{project}_*.tar.bz2")
	files.concat Dir.glob("#{project}-*.gem")
	delete_rf files
	end


def File.edit(filename)
  s = nil
  File.open(filename, 'r+') do |f|
    s = f.read()
    f.rewind()
    f.truncate(0)
    yield(s)
    f.write(s)
  end
  return s
end


desc	"create archive"
grecipe	"#{project}_*.tar.bz2"    , text_files, doc_files	do |r|
	release = m[1]
	suffix  = 'tar.bz2'   # m[2]
	dir = "#{project}_#{m[1]}"
	remove_rf dir
	mkdir_p dir
	store 'lib/**/*', 'bin/*', 'test/**/*', 'examples/**/*', text_files, dir
	#chdir 'examples' do cmd 'rook :clean' end
	#store 'examples/**/*', dir
	mkdir_p "#{dir}/doc"
	copy_r doc_files, "#{dir}/doc"
	mkdir_p "#{dir}/contrib"
	copy_r inline_require_script, "#{dir}/contrib"
	#
	Dir.glob("#{dir}/**/*").each do |file|
	  next unless test(?f, file)
	  File.edit(file) do |s|
	    s.gsub!(/\$Release.*?\$/, "$Release: #{m[1]} $")
	    s.gsub!(/\$Copyright.*?\$/, copyright)
	  end
	end
	#
	Dir.glob("#{dir}/**/*").each do |filename|
	  next unless test(?f, filename)
	  File.chmod(0644, filename)
	end
	Dir.glob("#{dir}/{bin,contrib}/*").each do |filename|
	  File.chmod(0755, filename)
	end
	#
	if !suffix || suffix.empty? || suffix == 'tar.bz2'
	  cmd "tar cjf #{dir}.tar.bz2 #{dir}"
	elsif suffix == 'tar.gz'
	  cmd "tar czf #{dir}.tar.gz #{dir}"
	elsif suffix == 'zip'
	  cmd "zip -qr9 #[dir}.zip #{dir}"
	end
	chdir dir do cmd "gem build #{project}.gemspec" end
	move "#{dir}/#{project}-#{release}.gem", "."
   end


desc   "chmod files"
recipe :chmod  do |r|
	Dir.glob('**/*').each do |filename|
	   next if filename =~ /\.svn/
	   next unless test(?f, filename)
	   File.chmod(0644, filename)
	end
	File.chmod(0755, "bin/#{project}")
    end


